# #############################################################################
# SETTING UP TEMPLATES IN A NEW ENVIRONMENT OR BACKING UP FROM OLD:
# Some of the unique_ids might not work immediately as entity_ids.
# In those cases they are typically found with their names formatted
#  with underscores. In the HA UI, go to Settings > Devices & services
#  > Entities, and search up the entity, and rename it to its unique_id
#  in there. Then icon can also be configured, as desired.
# #############################################################################
- sensor:
    # =========================================================================
    # Floor Plan brightness levels. Linked to opacity-levels for PNG layers
    # Entity IDs were manually edited in Home Assistant: 
    # Settings > Devices and services > Entities > Change each entity_id
    - name: "Bedroom pendant brightness level"
      unique_id: pendant_bedroom_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.pendant_bedroom', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %}
    - name: "Office pendants brightness level"
      unique_id: pendants_office_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.pendants_office', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %}
    - name: "Guest pendant brightness level"
      unique_id: pendant_guest_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.pendant_guest', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %}
    - name: "Entry downlights brightness level"
      unique_id: downlights_entry_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.downlights_entry', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %}
    - name: "Toilet downlight brightness level"
      unique_id: downlight_toilet_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.downlight_toilet', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %}
    - name: "Bathroom downlights brightness level"
      unique_id: downlights_bath_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.downlights_bath', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %}
    - name: "Bathroom lightstrip brightness level"
      unique_id: lightstrip_bath_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.lightstrip_bath', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %}
    - name: "Living room spottrack brightness level"
      unique_id: spottrack_living_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.spottrack4_living', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %}
    - name: "Living room downlights brightness level"
      unique_id: downlights_living_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.downlights_living', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %}
    - name: "Dining pendants brightness level"
      unique_id: pendants_dining_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.pendants_living', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %}
    - name: "Kitchen pendants brightness level"
      unique_id: pendants_kitchen_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.pendants_kitchen', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %}
    - name: "Kitchen spottrack brightness level"
      unique_id: spottrack_kitchen_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.spottrack6_kitchen', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %} 
    - name: "Kitchen lightstrip brightness level"
      unique_id: lightstrip_undershelf_kitchen_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.lightstrip_undershelf_kitchen', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %}
    - name: "Storage room ceiling light brightness level"
      unique_id: ceiling_light_storage_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.ceiling_light_storage', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %}
    - name: "Veranda wall lantern brightness level"
      unique_id: wall_lantern_veranda_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.wall_lantern_veranda', 'brightness') %}
        {% set percent = (brightness / 255 * 100) | round(0) if brightness != None else 0 %}
        {% if percent <= 0 %}
          0
        {% elif percent <= 5 %}
          5
        {% elif percent <= 10 %}
          10
        {% elif percent <= 20 %}
          20
        {% elif percent <= 30 %}
          30
        {% elif percent <= 50 %}
          50
        {% elif percent <= 75 %}
          75
        {% else %}
          100
        {% endif %}
    
- binary_sensor:
  - name: "Esmeralda Mop Ready"
    unique_id: esmeralda_mop_ready
    state: >
      {{ is_state('binary_sensor.esmeralda_mop_attached', 'on') 
          and is_state('binary_sensor.esmeralda_water_box_attached', 'on') }}

- sensor:
  - name: "Lights On Count"
    unique_id: lights_on_count
    unit_of_measurement: ''
    state: >
      {{ [states('light.ceiling_light_storage'), 
          states('light.downlight_toilet'),
          states('light.downlights_bath'),
          states('light.downlights_entry'),
          states('light.downlights_living'),
          states('light.lightstrip_bath'),
          states('light.lightstrip_undershelf_kitchen'),
          states('light.mood_ball'),
          states('light.pendant_bedroom'),
          states('light.pendant_guest'),
          states('light.pendants_kitchen'),
          states('light.pendants_living'),
          states('light.pendants_office'),
          states('light.spottrack4_living'),
          states('light.spottrack6_kitchen'),
          states('light.wall_lantern_veranda'),
          states('switch.lamp_globe_living'),
          states('switch.lamp_mushroom_living')] | select('eq', 'on') | list | count }}

- sensor:
  - unique_id: elvia_fixed_price_level_1
    name: Elvia fixed month price level 1
    unit_of_measurement: "kr"
    state: >
      {{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[0]['monthlyTotal'] }}
    attributes:
      value_min: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[0]['valueMin'] }}"
      value_max: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[0]['valueMax'] }}"
      value_unit: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[0]['valueUnitOfMeasure'] }}"
      id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[0]['id'] }}"
      next_id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[0]['nextIdUp'] }}"
      prev_id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[0]['nextIdDown'] }}"

- sensor:
  - unique_id: elvia_fixed_price_level_2
    name: Elvia fixed month price level 2
    unit_of_measurement: "kr"
    state: >
      {{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[1]['monthlyTotal'] }}
    attributes:
      value_min: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[1]['valueMin'] }}"
      value_max: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[1]['valueMax'] }}"
      value_unit: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[1]['valueUnitOfMeasure'] }}"
      id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[1]['id'] }}"
      next_id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[1]['nextIdUp'] }}"
      prev_id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[1]['nextIdDown'] }}"

- sensor:
  - unique_id: elvia_fixed_price_level_3
    name: Elvia fixed month price level 3
    unit_of_measurement: "kr"
    state: >
      {{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[2]['monthlyTotal'] }}
    attributes:
      value_min: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[2]['valueMin'] }}"
      value_max: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[2]['valueMax'] }}"
      value_unit: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[2]['valueUnitOfMeasure'] }}"
      id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[2]['id'] }}"
      next_id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[2]['nextIdUp'] }}"
      prev_id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[2]['nextIdDown'] }}"

- sensor:
  - unique_id: elvia_fixed_price_level_4
    name: Elvia fixed month price level 4
    unit_of_measurement: "kr"
    state: >
      {{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[3]['monthlyTotal'] }}
    attributes:
      value_min: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[3]['valueMin'] }}"
      value_max: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[3]['valueMax'] }}"
      value_unit: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[3]['valueUnitOfMeasure'] }}"
      id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[3]['id'] }}"
      next_id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[3]['nextIdUp'] }}"
      prev_id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[3]['nextIdDown'] }}"

- sensor:
  - unique_id: elvia_fixed_price_level_5 
    name: Elvia fixed month price level 5
    unit_of_measurement: "kr"
    state: >
      {{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[4]['monthlyTotal'] }}
    attributes:
      value_min: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[4]['valueMin'] }}"
      value_max: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[4]['valueMax'] }}"
      value_unit: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[4]['valueUnitOfMeasure'] }}"
      id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[4]['id'] }}"
      next_id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[4]['nextIdUp'] }}"
      prev_id: "{{ state_attr('sensor.elvia_fixed_prices', 'priceLevels')[4]['nextIdDown'] }}"

- sensor:
  - unique_id: elvia_active_fixed_price_level
    name: Elvia active fixed price level 
    unit_of_measurement: "kr"
    state: >
      {% set current_value = states('sensor.power_monthly_max_hour_average') | float %}
      {% for i in range(1, 6) %}
        {% set sensor_id = 'sensor.elvia_fixed_price_level_' ~ i %}
        {% set value_min = state_attr(sensor_id, 'value_min') | float %}
        {% set value_max = state_attr(sensor_id, 'value_max') | float %}
          {% if value_min <= current_value < value_max %}
            {{ states(sensor_id) }}
            {% break %}
          {% endif %}
      {% endfor %}
    attributes:
      level_max: >
        {% set current_value = states('sensor.power_monthly_max_hour_average') | float %}
        {% for i in range(1, 6) %}
          {% set sensor_id = 'sensor.elvia_fixed_price_level_' ~ i %}
          {% set value_min = state_attr(sensor_id, 'value_min') | float %}
          {% set value_max = state_attr(sensor_id, 'value_max') | float %}
            {% if value_min <= current_value < value_max %}
              {{ state_attr(sensor_id, 'value_max') | float | round(1) }}
              {% break %}
            {% endif %}
        {% endfor %}
      prev_max: >
        {% set current_value = states('sensor.power_monthly_max_hour_average') | float %}
        {% for i in range(1, 6) %}
          {% set sensor_id = 'sensor.elvia_fixed_price_level_' ~ i %}
          {% set value_min = state_attr(sensor_id, 'value_min') | float %}
          {% set value_max = state_attr(sensor_id, 'value_max') | float %}
            {% if value_min <= current_value < value_max %}
              {{ state_attr(sensor_id, 'value_min') | float | round(1) }}
              {% break %}
            {% endif %}
        {% endfor %}
