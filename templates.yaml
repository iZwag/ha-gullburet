- sensor:
    # =========================================================================
    # Floor Plan brightness levels. Linked to opacity-levels for PNG layers
    # Entity IDs were manually edited in Home Assistant: 
    # Settings > Devices and services > Entities > Change each entity_id
    - name: "Bedroom pendant brightness level"
      unique_id: pendant_bedroom_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.pendant_bedroom', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }}
    - name: "Office pendants brightness level"
      unique_id: pendants_office_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.pendants_office', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }}
    - name: "Guest pendant brightness level"
      unique_id: pendant_guest_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.pendant_guest', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }}
    - name: "Entry downlights brightness level"
      unique_id: downlights_entry_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.downlights_entry', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }}
    - name: "Toilet downlight brightness level"
      unique_id: downlight_toilet_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.downlight_toilet', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }}
    - name: "Bathroom downlights brightness level"
      unique_id: downlights_bath_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.downlights_bath', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }}
    - name: "Bathroom lightstrip brightness level"
      unique_id: lightstrip_bath_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.lightstrip_bath', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }}
    - name: "Living room spottrack brightness level"
      unique_id: spottrack_living_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.spottrack4_living', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }}
    - name: "Living room downlights brightness level"
      unique_id: downlights_living_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.downlights_living', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }}
    - name: "Dining pendants brightness level"
      unique_id: pendants_dining_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.pendants_living', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }}
    - name: "Kitchen pendants brightness level"
      unique_id: pendants_kitchen_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.pendants_kitchen', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }}
    - name: "Kitchen spottrack brightness level"
      unique_id: spottrack_kitchen_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.spottrack6_kitchen', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }} 
    - name: "Kitchen lightstrip brightness level"
      unique_id: lightstrip_undershelf_kitchen_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.lightstrip_undershelf_kitchen', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }}
    - name: "Storage room ceiling light brightness level"
      unique_id: ceiling_light_storage_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.ceiling_light_storage', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }}
    - name: "Veranda wall lantern brightness level"
      unique_id: wall_lantern_veranda_dim
      unit_of_measurement: '%'
      state: >
        {% set brightness = state_attr('light.wall_lantern_veranda', 'brightness') %}
        {{ (brightness / 255 * 100) | round(0) if brightness != None else 0 }}
    # -------------------------------------------------------------------------
    - name: "Storage rom light time remaining"
      unique_id: storage_room_timer_remaining
      unit_of_measurement: 'Time'
      icon: mdi:sun-clock
      state: >
        {% if states('timer.storage_room_light_timer') == 'active' %}
          {{ (state_attr('timer.storage_room_light_timer', 'duration').total_seconds() - as_timestamp(now()) + as_timestamp(state_attr('timer.storage_room_light_timer', 'finishes_at'))) | timestamp_custom('%M:%S', false) }}
        {% else %}
          '00:00'
        {% endif %}
 