# Entur / Ruter holdeplass sanntidsdata om avganger
- platform: entur_public_transport
  name: Ruter
  expand_platforms: true
  show_on_map: true
  number_of_departures: 4
  stop_ids:
    - "NSR:StopPlace:58185" # Sandaker senter
    - "NSR:StopPlace:58256" # Torshov
    - "NSR:StopPlace:6404" # Haarklous plass
    - "NSR:StopPlace:58195" # Storo

# Tibber future prices
- platform: rest
  name: Tibber Prices
  resource: https://api.tibber.com/v1-beta/gql
  method: POST
  payload: '{ "query": "{ viewer { homes { currentSubscription { status priceInfo { current { total } today { total } tomorrow { total } } } } } }" }'
  json_attributes_path: "$.data.viewer.homes[0].currentSubscription.priceInfo"
  json_attributes:
    - today
    - tomorrow
  value_template: "{{ value_json.data.viewer.homes[0].currentSubscription.priceInfo.current.total | float }}"
  scan_interval: 30
  headers:
    Authorization: !secret tibber_token
    Content-Type: application/json
    User-Agent: REST
  unit_of_measurement: NOK/kWh

# Time and date as sensors
- platform: time_date
  display_options:
    - "time"
    - "date"
    - "date_time"
    - "date_time_utc"
    - "date_time_iso"
    - "time_date"
    - "time_utc"
    - "beat"

# All template sensors
- platform: template
  sensors:
    # Readable string for week-day, as sensor
    day:
      value_template: >
        {% set days = ["Mandag", "Tirsdag", "Onsdag", "Torsdag", "Fredag", "Lørdag", "Søndag"] %}
        {{ days[now().weekday()] }}
    
    # Readable string for month, as sensor
    month:
      value_template: >
        {% set months = ["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"] %}
        {{ months[now().month-1] }}
    
    # Formats the week-day and date into a humanly readable sentence for UI, as sensor
    date_string:
      friendly_name: "Full Date"
      value_template: "{{ states('sensor.day') }}, {{ now().day }}.  {{ states('sensor.month') }} {{ now().year }}"
    
    # Temperature sensor for Kitchen Heater
    temperature_kitchen:
      friendly_name: "Kitchen temperature, measured by panel heater"
      unit_of_measurement: "°C"
      value_template: "{{ state_attr('climate.heater_kitchen', 'current_temperature') }}"
      device_class: temperature

    # Temperature sensor for Kitchen Heater
    temperature_living:
      friendly_name: "Living room temperature, measured by panel heater"
      unit_of_measurement: "°C"
      value_template: "{{ state_attr('climate.heater_living', 'current_temperature') }}"
      device_class: temperature
  
    # Temperature sensor for Kitchen Heater
    temperature_bedroom:
      friendly_name: "Bedroom temperature, measured by panel heater"
      unit_of_measurement: "°C"
      value_template: "{{ state_attr('climate.heater_bedroom', 'current_temperature') }}"
      device_class: temperature

    # Temperature sensor for current outdoor weather from weather integration
    outdoor_temperature:
      friendly_name: "Outdoor current temperature"
      unit_of_measurement: "°C"
      value_template: "{{ state_attr('weather.yr_weather_home', 'temperature') }}"
      device_class: temperature

    # Finds the current setting of the physical remote for the heated sheet
    heated_sheet_setting:
      friendly_name: "Heated Sheet - Control setting"
      value_template: >-
        {% if states('sensor.heated_sheet_switch_switch_0_power')|float >= 0 and states('sensor.heated_sheet_switch_switch_0_power')|float < 1 %}
          Off
        {% elif states('sensor.heated_sheet_switch_switch_0_power')|float >= 15 and states('sensor.heated_sheet_switch_switch_0_power')|float <= 20 %}
          #1
        {% elif states('sensor.heated_sheet_switch_switch_0_power')|float >= 28 and states('sensor.heated_sheet_switch_switch_0_power')|float <= 40 %}
          Feet
        {% elif states('sensor.heated_sheet_switch_switch_0_power')|float >= 50 and states('sensor.heated_sheet_switch_switch_0_power')|float <= 80 %}
          #2
        {% else %}
          On
        {% endif %}
    
    esmeralda_battery:
      friendly_name: "Esmeralda battery status"
      unit_of_measurement: "%"
      value_template: "{{ state_attr('vacuum.esmeralda', 'battery_level') }}"
      device_class: battery

    esmeralda_fan_speed:
      friendly_name: "Esmeralda current fan-speed"
      value_template: >-
        {% set fan_speed = state_attr('vacuum.esmeralda', 'fan_speed') %}
        {% if fan_speed == "Silent" %}
          Quiet
        {% elif fan_speed == "Standard" %}
          Balanced
        {% elif fan_speed == "Medium" %}
          Turbo
        {% elif fan_speed == "Turbo" %}
          Max
        {% elif fan_speed == "105" %}
          Off
        {% else %}
          Unknown
        {% endif %}
