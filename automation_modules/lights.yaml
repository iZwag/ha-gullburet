# TIPS:
# Want to remove default, unused 'metadata: {-}' and 'data: {-}' fields?
# Search and replace (with nothing) with this Regex: ^.*data: \{\}.*\n?

- id: '1708515045819'
  alias: Lights - Masterdim ALL lights
  description: Masterdims the brightness of lights in all the activity-rooms. The exceptions are Bedroom, Guest room and Storage-room. Only applied to lights with adjustable brightness.
  trigger:
  - platform: state
    entity_id: input_number.apartment_dimmer
  condition: []
  action:
  - service: script.masterdim_script
    data:
      manual_override: "{{ is_state('input_boolean.lights_override_veranda', 'on') }}"
      light_entity: light.wall_lantern_veranda
      brightness: "{{ states('input_number.apartment_dimmer') }}"
    alias: Masterdim Veranda wall lantern
  - service: script.masterdim_script
    data:
      manual_override: "{{ is_state('input_boolean.lights_override_kitchen', 'on') }}"
      light_entity: light.spottrack6_kitchen
      brightness: "{{ states('input_number.apartment_dimmer') }}"
    alias: Masterdim Kitchen 6-track
  - service: script.masterdim_script
    data:
      manual_override: "{{ is_state('input_boolean.lights_override_kitchen', 'on') }}"
      light_entity: light.pendants_kitchen
      brightness: "{{ states('input_number.apartment_dimmer') }}"
    alias: Masterdim Kitchen pendants
  - service: script.masterdim_script
    data:
      manual_override: "{{ is_state('input_boolean.lights_override_living', 'on') }}"
      light_entity: light.pendants_living
      brightness: "{{ states('input_number.apartment_dimmer') }}"
    alias: Masterdim Living pendants
  - service: script.masterdim_script
    data:
      manual_override: "{{ is_state('input_boolean.lights_override_living', 'on') }}"
      light_entity: light.downlights_living
      brightness: "{{ states('input_number.apartment_dimmer') }}"
    alias: Masterdim Living downlights
  - service: script.masterdim_script
    data:
      manual_override: "{{ is_state('input_boolean.lights_override_living', 'on') }}"
      light_entity: light.spottrack4_living
      brightness: "{{ states('input_number.apartment_dimmer') }}"
    alias: Masterdim Living 4-track
  - service: script.masterdim_script
    data:
      manual_override: "{{ is_state('input_boolean.lights_override_living', 'on') }}"
      light_entity: light.mood_lamp_living
      brightness: "{{ states('input_number.apartment_dimmer') }}"
    alias: Masterdim Living mood ball
  - service: script.masterdim_script
    data:
      manual_override: "{{ is_state('input_boolean.lights_override_entry', 'on') }}"
      light_entity: light.downlights_entry
      brightness: "{{ states('input_number.apartment_dimmer') }}"
    alias: Masterdim Entry downlights
  - service: script.masterdim_script
    data:
      manual_override: "{{ is_state('input_boolean.lights_override_office', 'on') }}"
      light_entity: light.pendants_office
      brightness: "{{ states('input_number.apartment_dimmer') }}"
    alias: Masterdim Office pendants
  - service: script.masterdim_script
    data:
      manual_override: "{{ is_state('input_boolean.lights_override_bath', 'on') }}"
      light_entity: light.lightstrip_bath
      brightness: "{{ states('input_number.apartment_dimmer') }}"
    alias: Masterdim Bath lightstrip
  - service: script.masterdim_script
    data:
      manual_override: "{{ is_state('input_boolean.lights_override_bath', 'on') }}"
      light_entity: light.downlights_bath
      brightness: "{{ states('input_number.apartment_dimmer') }}"
    alias: Masterdim Bath downlights
  - service: script.masterdim_script
    data:
      manual_override: false
      light_entity: light.downlight_toilet
      brightness: "{{ states('input_number.apartment_dimmer') }}"
    alias: Masterdim Toilet downlight
  mode: restart

- id: '1709814409323'
  alias: Lights - Handle Auto suncycle masterdim ON/OFF
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.auto_suncycle_masterdim
    from: 'off'
    to: 'on'
    id: 'on'
  - platform: state
    entity_id:
    - input_boolean.auto_suncycle_masterdim
    from: 'on'
    to: 'off'
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - 'on'
      sequence:
      - service: script.lights_reset_overrides
  mode: single

- id: '1707168721809'
  alias: Auto masterdim with Sun-cycle
  description: Automatically adjusts the brightness of all lights in the apartment
    (masterdim) at 8 times during the suns cycle.
  trigger:
  - platform: time
    at: sensor.sun_next_midnight
    id: midnight
  - platform: time
    at: sensor.sun_next_dawn
    id: dawn
  - platform: time
    at: sensor.sun_next_rising
    id: sunrise
  - platform: time
    at: input_datetime.risenoon
    id: risenoon
  - platform: time
    at: sensor.sun_next_noon
    id: noon
  - platform: time
    at: input_datetime.noonset
    id: noonset
  - platform: time
    at: sensor.sun_next_setting
    id: sunset
  - platform: time
    at: sensor.sun_next_dusk
    id: dusk
  condition:
  - condition: state
    entity_id: input_boolean.auto_suncycle_masterdim
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - midnight
      sequence:
      - service: input_number.set_value
        data:
          value: '{{ states(''input_number.dimconstant_lowest'') | int }}'
        target:
          entity_id: input_number.apartment_dimmer
      - service: script.sun_cycle_set_next_event_text
        data:
          next_sun_event: Dawn
          event_time: '{{ states(''sensor.sun_next_dawn'') }}'
    - conditions:
      - condition: trigger
        id:
        - dawn
      sequence:
      - service: input_number.set_value
        data:
          value: '{{ states(''input_number.dimconstant_low'') | int }}'
        target:
          entity_id: input_number.apartment_dimmer
      - service: script.sun_cycle_set_next_event_text
        data:
          next_sun_event: Sunrise
          event_time: '{{ states(''sensor.sun_next_rising'') }}'
    - conditions:
      - condition: trigger
        id:
        - sunrise
      sequence:
      - service: input_number.set_value
        data:
          value: '{{ states(''input_number.dimconstant_medium'') | int }}'
        target:
          entity_id: input_number.apartment_dimmer
      - service: script.sun_cycle_set_next_event_text
        data:
          next_sun_event: Risenoon
          event_time: '{{ states(''input_datetime.risenoon'') }}'
    - conditions:
      - condition: trigger
        id:
        - risenoon
      sequence:
      - service: input_number.set_value
        data:
          value: '{{ states(''input_number.dimconstant_high'') | int }}'
        target:
          entity_id: input_number.apartment_dimmer
      - service: script.sun_cycle_set_next_event_text
        data:
          next_sun_event: Noon
          event_time: '{{ states(''sensor.sun_next_noon'') }}'
    - conditions:
      - condition: trigger
        id:
        - noon
      sequence:
      - service: input_number.set_value
        data:
          value: '{{ states(''input_number.dimconstant_highest'') | int }}'
        target:
          entity_id: input_number.apartment_dimmer
      - service: script.sun_cycle_set_next_event_text
        data:
          next_sun_event: Noonset
          event_time: '{{ states(''input_datetime.noonset'') }}'
    - conditions:
      - condition: trigger
        id:
        - noonset
      sequence:
      - service: input_number.set_value
        data:
          value: '{{ states(''input_number.dimconstant_high'') | int }}'
        target:
          entity_id: input_number.apartment_dimmer
      - service: script.sun_cycle_set_next_event_text
        data:
          next_sun_event: Sunset
          event_time: '{{ states(''sensor.sun_next_setting'') }}'
    - conditions:
      - condition: trigger
        id:
        - sunset
      sequence:
      - service: input_number.set_value
        data:
          value: '{{ states(''input_number.dimconstant_medium'') | int }}'
        target:
          entity_id: input_number.apartment_dimmer
      - service: script.sun_cycle_set_next_event_text
        data:
          next_sun_event: Dusk
          event_time: '{{ states(''sensor.sun_next_dusk'') }}'
    - conditions:
      - condition: trigger
        id:
        - dusk
      sequence:
      - service: input_number.set_value
        data:
          value: '{{ states(''input_number.dimconstant_low'') | int }}'
        target:
          entity_id: input_number.apartment_dimmer
      - service: script.sun_cycle_set_next_event_text
        data:
          next_sun_event: Midnight
          event_time: '{{ states(''sensor.sun_next_midnight'') }}'
  mode: single

- id: "1703000590222"
  alias: Calculate RiseNoon and NoonSet at Midnight
  description:
    Calculates the daily middle-times between Sunrise and Noon, and Noon
    and Sunset at midnight
  trigger:
    - platform: time
      at: sensor.sun_next_midnight
  condition: []
  action:
    - service: script.calculate_risenoon
    - service: script.calculate_noonset
  mode: single

- id: '1710428595542'
  alias: Lights - Handle light-mode toggles ON/OFF
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.lights_cooking_mode
    id: cooking-on
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - input_boolean.lights_cooking_mode
    id: cooking-off
    from: 'on'
    to: 'off'
  - platform: state
    entity_id:
    - input_boolean.lights_dining_mode
    id: dining-on
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - input_boolean.lights_dining_mode
    id: dining-off
    from: 'on'
    to: 'off'
  - platform: state
    entity_id:
    - input_boolean.lights_movie_mode
    id: movie-off
    from: 'on'
    to: 'off'
  - platform: state
    entity_id:
    - input_boolean.lights_movie_mode
    id: movie-on
    from: 'off'
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - cooking-on
      sequence:
      - service: script.lights_kitchen_cooking_mood
    - conditions:
      - condition: trigger
        id:
        - cooking-off
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.lights_override_kitchen
    - conditions:
      - condition: trigger
        id:
        - dining-on
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.lights_movie_mode
          - input_boolean.lights_cooking_mode
      - service: script.lights_dinner_mood
    - conditions:
      - condition: trigger
        id:
        - dining-off
        - movie-off
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.lights_override_entry
          - input_boolean.lights_override_kitchen
          - input_boolean.lights_override_living
          - input_boolean.lights_override_veranda
    - conditions:
      - condition: trigger
        id:
        - movie-on
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.lights_cooking_mode
          - input_boolean.lights_dining_mode
      - service: script.lights_tv_mood
  mode: queued

# To find the required event_data for the double-click triggers,
# use HA Developer Tools to listen for Z-wave events with trigger:
#  'zwave_js_value_notification'. Then physically double-click the target 
#  switch to identify its information. 
- id: '1710423415819'
  alias: Lights - Handle Fibaro Dimmer double-clicks
  description: ''
  trigger:
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 11
      command_class: 43
      property: sceneId
      value: 14
    id: entry-double-click
    alias: Listen for Fibaro Dimmer entry double-clicked
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 5
      command_class: 43
      property: sceneId
      value: 14
    id: kitchen-double-click
    alias: Listen for Fibaro Dimmer kitchen double-clicked
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 7
      command_class: 43
      property: sceneId
      value: 14
    id: dining-double-click
    alias: Listen for Fibaro Dimmer dining double-clicked
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 13
      command_class: 43
      property: sceneId
      value: 14
    id: bath-downlights-2x
    alias: Listen for Fibaro Dimmer bath downlights 2x
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 14
      command_class: 43
      property: sceneId
      value: 14
    id: bath-lighstrip-2x
    alias: Listen for Fibaro Dimmer bath lighstrip 2x
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 4
      command_class: 43
      property: sceneId
      value: 14
    id: living-track4-2x
    alias: Listen for Fibaro Dimmer living track4 2x
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - entry-double-click
      sequence:
      - service: script.all_lights_off
      alias: Entry double-click
    - conditions:
      - condition: trigger
        id:
        - kitchen-double-click
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.lights_cooking_mode
    - conditions:
      - condition: trigger
        id:
        - dining-double-click
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.lights_dining_mode
    - conditions:
      - condition: trigger
        id:
        - bath-downlights-2x
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.bathroom_mode_select
        data:
          option: "bright"
    - conditions:
      - condition: trigger
        id:
        - bath-lighstrip-2x
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.bathroom_mode_select
        data:
          option: "night"
    - conditions:
      - condition: trigger
        id:
        - living-track4-2x
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.lights_movie_mode
  mode: queued