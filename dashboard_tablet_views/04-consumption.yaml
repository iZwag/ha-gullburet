# CONSUMPTION VIEW
title: Consumption
path: consumption
type: sidebar
theme: ios-dark-mode
background: center / cover no-repeat url("/local/ui/bg-gradient3.png") fixed
cards:
  # SIDEBAR CONTENTS
  - type: vertical-stack
    view_layout:
      position: sidebar
    cards:
    # Display Clock
    - type: custom:button-card
      entity: sensor.time
      template: navbar_clock
    # Display Date string
    - type: custom:button-card
      entity: sensor.date_string
      template: navbar_datestring
    # NAVBUTTONS
    # Dashboard
    - type: custom:button-card
      template: navbar_button
      name: Dashboard
      icon: mdi:home
      tap_action:
        action: navigate
        navigation_path: /dashboard-tablet/dashboard
    - type: custom:button-card
      template: navbar_button
      name: Floorplan control
      icon: mdi:floor-plan      
      tap_action:
        action: navigate
        navigation_path: /dashboard-tablet/floorplan
    - type: custom:button-card
      template: navbar_button
      name: Bedtime & wake-up
      icon: mdi:bed
      tap_action:
        action: navigate
        navigation_path: /dashboard-tablet/sleep
    - type: custom:button-card
      icon: mdi:chart-bar
      name: Consumption
      template: navbar_button
      variables:
        link_active: "true"
      tap_action:
        action: navigate
        navigation_path: /dashboard-tablet/consumption
    - type: custom:button-card
      icon: mdi:star
      name: Special
      template: navbar_button
      tap_action:
        action: navigate
        navigation_path: /dashboard-tablet/special
    - type: custom:button-card
      icon: mdi:speaker
      name: Listen
      template: navbar_button
      tap_action:
        action: navigate
        navigation_path: /dashboard-tablet/audio
    # VERTICAL SPACER ELEMENT: ADJUST THE HEIGHT AS NEEDED
    - type: custom:button-card
      color_type: blank_card
      styles:
        card:
          - height: 25vh
          - background-color: transparent
    - type: custom:mushroom-chips-card
      alignment: center
      card_mod:
        style: |
          ha-card {
            --chip-background: rgba(25, 25, 25, 0.2);
            --primary-text-color: var(--secondary-text-color);
          }
      chips:
      - type: action
        tap_action:
          action: navigate
          navigation_path: /lovelace/0
        icon: mdi:cog
      - type: entity
        entity: sensor.temperature_apartment_avg
      - type: weather
        entity: weather.yr_weather_home
        show_temperature: true
        show_conditions: true

  # MAIN VIEW CONTENT
  - type: "custom:bootstrap-grid-card"
    #container_padding: 10px
    #use_hass_style_gutter: true
    #hass_style_gutter_size: "10px"
    cards:
    - type: row
      cards:
      - type: vertical-stack
        class: "col-md-1"
        cards:
        - type: custom:button-card
          color_type: blank_card
          styles:
            card:
            - background-color: transparent
      - type: vertical-stack
        class: "col-md-10"
        cards:
        - type: horizontal-stack
          cards:
          # ENERGY CONSUMPTION RADIAL-BAR
          # Tracks the current hour energy consumption and compares it to the
          # current month's max-hours and average
          - type: custom:apexcharts-card
            card_mod:
              style: |
                ha-card {
                  background-color: transparent;
                  padding: var(--ha-card-padding) var(--ha-card-padding) 0 !important;
                }
                #spinner-wrapper {
                  display: none !important;
                }
                #header {
                  padding: 0 16px !important;
                }
                #header__title {
                  font-size: 1em !important;
                  font-weight: regular !important;
                  color: var(--primary-text-color) !important;
                }
            chart_type: radialBar
            apex_config:
              legend:
                show: false
              #chart:
                #height: 250px
              plotOptions:
                radialBar:
                  inverseOrder: true
                  hollow:
                    image: '/local/ui/google-icon-electric-bolt-128px.png'
                    imageClipped: false
                    imageWidth: 50
                    imageHeight: 50
                    size: 35%
            header:
              show: true
              title: 'Current hour vs. this month max-hour average'
              show_states: true
              colorize_states: true
            series:
              # Current hour (chart)
              - entity: sensor.tibber_percentage_of_maxlevel
                name: Current hour
                show:
                  in_header: false
                color: '#1aff66'
                data_generator: |
                  const sensor_percent = parseFloat(entity.state);
                  return [[new Date().getTime(), sensor_percent]];
              # Current hour (header)
              - entity: sensor.tibber_energy_consumption_current_hour
                name: Current hour
                show:
                  in_chart: false
                unit: ' kWh'
                color: '#1aff66'
                float_precision: 2
              # Estimated (header)
              # COMMENTED OUT BECAUSE COL-5 CANT PLACE 4 HEADER VALUES IN 1 ROW
              #- entity: sensor.tibber_estimated_energy_consumption
              #  name: Estimated
              #  show:
              #    in_chart: false
              #  unit: ' kWh'
              #  color: '#fdca40'
              #  float_precision: 2

              # Estimated (chart)
              - entity: sensor.tibber_percentage_of_maxlevel
                name: Hour estimate (Tibber)
                show:
                  in_header: false
                unit: ' kWh'
                color: '#fdca40'
                data_generator: |
                  const sensor_percent = parseFloat(entity.attributes.estimate);
                  return [[new Date().getTime(), sensor_percent]];
              # Max-hour average (chart)
              - entity: sensor.power_monthly_maxhour_average
                name: Average
                show:
                  in_header: false
                unit: ' %'
                color: '#d24dff'
                data_generator: |
                  const sensor_percent = parseFloat(entity.attributes.prcnt_of_limit);
                  return [[new Date().getTime(), sensor_percent]];
              # Max-hour average (header)
              - entity: sensor.power_monthly_maxhour_average
                name: Average
                show:
                  in_chart: false
                unit: ' kWh'
                color: '#d24dff'
                float_precision: 2
              # Max-hour 3 (chart)
              - entity: sensor.power_monthly_maxhour_3
                name: Max-hour 3
                show:
                  in_header: false
                color: '#1AC8ED'
                data_generator: |
                  const sensor_percent = parseFloat(entity.attributes.prcnt_of_limit);
                  return [[new Date().getTime(), sensor_percent]];
              # Max-hour 2 (chart)
              - entity: sensor.power_monthly_maxhour_2
                name: Max-hour 2
                show:
                  in_header: false
                color: '#1AC8ED'
                data_generator: |
                  const sensor_percent = parseFloat(entity.attributes.prcnt_of_limit);
                  return [[new Date().getTime(), sensor_percent]];
              # Max-hour 1 (chart)
              - entity: sensor.power_monthly_maxhour_1
                name: Max-hour 1
                show:
                  in_header: false
                color: '#1AC8ED'
                data_generator: |
                  const sensor_percent = parseFloat(entity.attributes.prcnt_of_limit);
                  return [[new Date().getTime(), sensor_percent]];
              # Price level (header)
              - entity: sensor.elvia_active_fixed_price_level
                name: Price level limit
                show:
                  in_chart: false
                unit: ' kWh'
                color: red
                float_precision: 2
                data_generator: |
                  const sensorValueKWh = parseFloat(entity.attributes.level_max);
                  return [[new Date().getTime(), sensorValueKWh]];
          
          - type: vertical-stack
            cards:
            - type: entities
              title: So far this month
              show_header_toggle: false
              state_color: true
              card_mod:
                style: | 
                  ha-card {
                    background-color: transparent;
                  }
              entities:
                - entity: sensor.tibber_monthly_cost
                  name: 'Electricity bill (Tibber)'
                  icon: mdi:cash
                - entity: sensor.elvia_monthly_total
                  name: 'Grid company bill (Elvia)'
                  icon: mdi:cash
                - entity: sensor.tibber_energy_consumption_this_month
                  name: Power consumption
            - type: gauge
              entity: sensor.tibber_power_consumption_realtime
              min: 0
              max: 8800
              needle: false
              severity:
                green: 1
                yellow: 2000
                red: 5000
              name: Power consumption (realtime)
              card_mod:
                style:
                  ha-gauge $ svg.gauge: |
                    .dial {
                      stroke: var(--ha-card-background) !important;
                      stroke-width: 5 !important;
                    }
                    .value {
                      stroke-width: 5 !important;
                    }
                  .: | 
                    ha-card {
                      background-color: transparent;
                      padding: 0 var(--ha-card-padding) var(--ha-card-padding) !important;
                    }    
        - type: horizontal-stack
          cards:
          - type: entities
            title: Battery status
            entities:
              - entity: sensor.heatsheet_remote_battery
                name: Heated sheet remote
              - entity: sensor.esmeralda_battery
                name: Esmeralda
              - entity: sensor.sonos_move_battery
                name: Sonos Move
              - entity: sensor.lenovo_tab_m10_battery
                name: Lenovo Tab M10
              - entity: sensor.iphone_jon_battery
                name: "Jon's iPhone"
            state_color: true
          - type: entities
            entities:
              - entity: sensor.temperature_battery_bedroom
                name: Sensor, bedroom
              - entity: sensor.temperature_battery_guest
                name: Sensor, guest room
              - entity: sensor.temperature_battery_entry
                name: Sensor, entry
              - entity: sensor.temperature_battery_kitchen
                name: Sensor, kitchen
              - entity: sensor.temperature_battery_office
                name: Sensor, office
              - entity: sensor.temperature_battery_living
                name: Sensor, living room
              - entity: sensor.motion_battery_storage
                name: Sensor, storage
            state_color: true
      - type: vertical-stack
        class: "col-md-1"
        cards:
        - type: custom:button-card
          color_type: blank_card
          styles:
            card:
            - background-color: transparent