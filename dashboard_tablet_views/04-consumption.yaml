# CONSUMPTION VIEW
title: Consumption
path: consumption
type: sidebar
theme: ios-dark-mode
background: center / cover no-repeat url("/local/ui/bg-gradient3.png") fixed
cards:
  # SIDEBAR CONTENTS
  - type: vertical-stack
    view_layout:
      position: sidebar
    cards:
    # Display Clock
    - type: custom:button-card
      entity: sensor.time
      template: navbar_clock
    # Display Date string
    - type: custom:button-card
      entity: sensor.date_string
      template: navbar_datestring
    # NAVBUTTONS
    # Dashboard
    - type: custom:button-card
      template: navbar_button
      name: Dashboard
      icon: mdi:home
      tap_action:
        action: navigate
        navigation_path: /dashboard-tablet/dashboard
    - type: custom:button-card
      template: navbar_button
      name: Floorplan control
      icon: mdi:floor-plan      
      tap_action:
        action: navigate
        navigation_path: /dashboard-tablet/floorplan
    - type: custom:button-card
      template: navbar_button
      name: Bedtime & wake-up
      icon: mdi:bed
      tap_action:
        action: navigate
        navigation_path: /dashboard-tablet/sleep
    - type: custom:button-card
      icon: mdi:chart-bar
      name: Consumption
      template: navbar_button
      variables:
        link_active: "true"
      tap_action:
        action: navigate
        navigation_path: /dashboard-tablet/consumption
    - type: custom:button-card
      icon: mdi:information-slab-circle
      name: Guest info
      template: navbar_button
      tap_action:
        action: navigate
        navigation_path: /dashboard-tablet/guests
    - type: custom:button-card
      icon: mdi:speaker
      name: Listen
      template: navbar_button
      tap_action:
        action: navigate
        navigation_path: /dashboard-tablet/audio
    # VERTICAL SPACER ELEMENT: ADJUST THE HEIGHT AS NEEDED
    - type: custom:button-card
      color_type: blank_card
      styles:
        card:
          - height: 25vh
          - background-color: transparent
    - type: custom:mushroom-chips-card
      alignment: center
      card_mod:
        style: |
          ha-card {
            --chip-background: rgba(25, 25, 25, 0.2);
            --primary-text-color: var(--secondary-text-color);
          }
      chips:
      - type: action
        tap_action:
          action: navigate
          navigation_path: /lovelace/0
        icon: mdi:cog
      - type: entity
        entity: sensor.temperature_apartment_avg
      - type: weather
        entity: weather.yr_weather_home
        show_temperature: true
        show_conditions: true

  # MAIN VIEW CONTENT
  - type: custom:mod-card
    card_mod:
      # Add 5% padding on both sides of the main content
      style: |
        ha-card {
          padding: 0px 5vw;
        }
    card:
      type: horizontal-stack
      cards:
      - type: vertical-stack
        cards:
        # First row 
        - type: horizontal-stack
          cards:
          - type: custom:stack-in-card
            mode: vertical
            cards:
            # REALTIME APARTMENT SENSOR WITH BAR
            - type: custom:button-card
              template: big_sensor_bar
              name: Apartment power, realtime
              icon: mdi:lightning-bolt
              entity: sensor.tibber_power_consumption_realtime
              variables:
                barMax: 8800
                barHiSeverity: 5000
                barMidSeverity: 2000
              styles:
                card:
                  - padding: 20px 20px 0px
            
            # MOMENTARY POWER CONSUMPTION CATEGORIES
            - type: custom:apexcharts-card
              card_mod:
                style: |
                  #spinner-wrapper {
                    display: none !important;
                  }
              chart_type: donut
              apex_config:
                legend:
                  show: true
                  fontSize: '14px'
                  fontFamily: 'Open Sans'
                dataLabels:
                  enabled: false  
                #chart:
                #  height: 300px
              header:
                show: false
              series:
                - entity: sensor.power_momentary_light_consumption
                  name: Lights
                  color: '#1aff66'
                  show:
                    in_header: false
                  unit: ' W'
                  data_generator: |
                    const sensor_percent = parseFloat(entity.state);
                    return [[new Date().getTime(), sensor_percent]];
                - entity: sensor.power_momentary_heating_consumption
                  name: Heating
                  color: '#fdca40'
                  show:
                    in_header: false
                  unit: ' W'
                  data_generator: |
                    const sensor_percent = parseFloat(entity.state);
                    return [[new Date().getTime(), sensor_percent]];
                - entity: sensor.power_momentary_static_consumption
                  name: Static
                  color: '#1AC8ED'
                  show:
                    in_header: false
                  unit: ' W'
                  data_generator: |
                    const sensor_percent = parseFloat(entity.state);
                    return [[new Date().getTime(), sensor_percent]];
                - entity: sensor.power_momentary_dynamic_consumption
                  name: Dynamic
                  color: '#d24dff'
                  show:
                    in_header: false
                  unit: ' W'
                  data_generator: |
                    const sensor_percent = parseFloat(entity.state);
                    return [[new Date().getTime(), sensor_percent]];
                - entity: sensor.power_other_momentary_consumption
                  name: Other
                  color: '#343434'
                  show:
                    in_header: false
                  unit: ' W'
                  data_generator: |
                    const sensor_percent = parseFloat(entity.state);
                    return [[new Date().getTime(), sensor_percent]];

          # REALTIME POWER BAR
          - type: custom:button-card
            template: big_sensor_bar
            name: Apartment power
            icon: mdi:lightning-bolt
            entity: sensor.tibber_power_consumption_realtime
            variables:
              barMax: 8800
              barHiSeverity: 5000
              barMidSeverity: 2000
        # Last row
        - type: horizontal-stack
          cards:
          # ENERGY CONSUMPTION RADIAL-BAR
          # Tracks the current hour energy consumption and compares it to the
          # current month's max-hours and average
          - type: custom:apexcharts-card
            card_mod:
              style: |
                ha-card {
                  background-color: transparent;
                  padding: var(--ha-card-padding) var(--ha-card-padding) 0 !important;
                }
                #spinner-wrapper {
                  display: none !important;
                }
                #header {
                  padding: 0 16px !important;
                }
                #header__title {
                  font-size: 1em !important;
                  font-weight: regular !important;
                  color: var(--primary-text-color) !important;
                }
            chart_type: radialBar
            apex_config:
              legend:
                show: false
              #chart:
                #height: 250px
              plotOptions:
                radialBar:
                  inverseOrder: true
                  hollow:
                    image: '/local/ui/google-icon-electric-bolt-128px.png'
                    imageClipped: false
                    imageWidth: 50
                    imageHeight: 50
                    size: 35%
            header:
              show: true
              title: 'Current hour vs. this month max-hour average'
              show_states: true
              colorize_states: true
            series:
              # Current hour (chart)
              - entity: sensor.tibber_percentage_of_maxlevel
                name: Current hour
                show:
                  in_header: false
                color: '#1aff66'
                data_generator: |
                  const sensor_percent = parseFloat(entity.state);
                  return [[new Date().getTime(), sensor_percent]];
              # Current hour (header)
              - entity: sensor.tibber_energy_consumption_current_hour
                name: Current hour
                show:
                  in_chart: false
                unit: ' kWh'
                color: '#1aff66'
                float_precision: 2
              # Estimated (header)
              # COMMENTED OUT BECAUSE COL-5 CANT PLACE 4 HEADER VALUES IN 1 ROW
              #- entity: sensor.tibber_estimated_energy_consumption
              #  name: Estimated
              #  show:
              #    in_chart: false
              #  unit: ' kWh'
              #  color: '#fdca40'
              #  float_precision: 2

              # Estimated (chart)
              - entity: sensor.tibber_percentage_of_maxlevel
                name: Hour estimate (Tibber)
                show:
                  in_header: false
                unit: ' kWh'
                color: '#fdca40'
                data_generator: |
                  const sensor_percent = parseFloat(entity.attributes.estimate);
                  return [[new Date().getTime(), sensor_percent]];
              # Max-hour average (chart)
              - entity: sensor.power_monthly_maxhour_average
                name: Average
                show:
                  in_header: false
                unit: ' %'
                color: '#d24dff'
                data_generator: |
                  const sensor_percent = parseFloat(entity.attributes.prcnt_of_limit);
                  return [[new Date().getTime(), sensor_percent]];
              # Max-hour average (header)
              - entity: sensor.power_monthly_maxhour_average
                name: Average
                show:
                  in_chart: false
                unit: ' kWh'
                color: '#d24dff'
                float_precision: 2
              # Max-hour 3 (chart)
              - entity: sensor.power_monthly_maxhour_3
                name: Max-hour 3
                show:
                  in_header: false
                color: '#1AC8ED'
                data_generator: |
                  const sensor_percent = parseFloat(entity.attributes.prcnt_of_limit);
                  return [[new Date().getTime(), sensor_percent]];
              # Max-hour 2 (chart)
              - entity: sensor.power_monthly_maxhour_2
                name: Max-hour 2
                show:
                  in_header: false
                color: '#1AC8ED'
                data_generator: |
                  const sensor_percent = parseFloat(entity.attributes.prcnt_of_limit);
                  return [[new Date().getTime(), sensor_percent]];
              # Max-hour 1 (chart)
              - entity: sensor.power_monthly_maxhour_1
                name: Max-hour 1
                show:
                  in_header: false
                color: '#1AC8ED'
                data_generator: |
                  const sensor_percent = parseFloat(entity.attributes.prcnt_of_limit);
                  return [[new Date().getTime(), sensor_percent]];
              # Price level (header)
              - entity: sensor.elvia_active_fixed_price_level
                name: Price level limit
                show:
                  in_chart: false
                unit: ' kWh'
                color: red
                float_precision: 2
                data_generator: |
                  const sensorValueKWh = parseFloat(entity.attributes.level_max);
                  return [[new Date().getTime(), sensorValueKWh]];
          
          - type: vertical-stack
            cards:
            - type: horizontal-stack
              cards:
              - type: custom:button-card
                template: big_sensor
                entity: sensor.tibber_monthly_cost
                name: 'Electricity (Tibber)'
              - type: custom:button-card
                template: big_sensor
                entity: sensor.elvia_monthly_total
                name: 'Grid usage (Elvia)'
            - type: custom:button-card
              template: big_sensor_dot
              entity: sensor.tibber_energy_consumption_this_month
              name: Energy consumption this month
              variables:
                dotHiSeverity: 900
                dotMidSeverity: 400
